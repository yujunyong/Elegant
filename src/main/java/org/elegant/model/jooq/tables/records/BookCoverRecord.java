/*
 * This file is generated by jOOQ.
 */
package org.elegant.model.jooq.tables.records;


import javax.annotation.Generated;

import org.elegant.model.jooq.tables.BookCover;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookCoverRecord extends UpdatableRecordImpl<BookCoverRecord> implements Record3<Integer, byte[], String> {

    private static final long serialVersionUID = -1583693140;

    /**
     * Setter for <code>PUBLIC.book_cover.book_id</code>. 书本id
     */
    public BookCoverRecord setBookId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.book_cover.book_id</code>. 书本id
     */
    public Integer getBookId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.book_cover.cover</code>. 封面二进制数据
     */
    public BookCoverRecord setCover(byte... value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.book_cover.cover</code>. 封面二进制数据
     */
    public byte[] getCover() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>PUBLIC.book_cover.image_file_extension</code>. 封面图片扩展名
     */
    public BookCoverRecord setImageFileExtension(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.book_cover.image_file_extension</code>. 封面图片扩展名
     */
    public String getImageFileExtension() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, byte[], String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, byte[], String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return BookCover.BOOK_COVER.BOOK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field2() {
        return BookCover.BOOK_COVER.COVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return BookCover.BOOK_COVER.IMAGE_FILE_EXTENSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component2() {
        return getCover();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getImageFileExtension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getBookId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value2() {
        return getCover();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getImageFileExtension();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookCoverRecord value1(Integer value) {
        setBookId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookCoverRecord value2(byte... value) {
        setCover(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookCoverRecord value3(String value) {
        setImageFileExtension(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookCoverRecord values(Integer value1, byte[] value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookCoverRecord
     */
    public BookCoverRecord() {
        super(BookCover.BOOK_COVER);
    }

    /**
     * Create a detached, initialised BookCoverRecord
     */
    public BookCoverRecord(Integer bookId, byte[] cover, String imageFileExtension) {
        super(BookCover.BOOK_COVER);

        set(0, bookId);
        set(1, cover);
        set(2, imageFileExtension);
    }
}
