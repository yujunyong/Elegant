/*
 * This file is generated by jOOQ.
 */
package org.elegant.model.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.elegant.model.jooq.tables.Author;
import org.elegant.model.jooq.tables.records.AuthorRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorDao extends DAOImpl<AuthorRecord, org.elegant.model.jooq.tables.pojos.Author, Integer> {

    /**
     * Create a new AuthorDao without any configuration
     */
    public AuthorDao() {
        super(Author.AUTHOR, org.elegant.model.jooq.tables.pojos.Author.class);
    }

    /**
     * Create a new AuthorDao with an attached configuration
     */
    public AuthorDao(Configuration configuration) {
        super(Author.AUTHOR, org.elegant.model.jooq.tables.pojos.Author.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.elegant.model.jooq.tables.pojos.Author object) {
        return object.getAuthorId();
    }

    /**
     * Fetch records that have <code>author_id IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Author> fetchByAuthorId(Integer... values) {
        return fetch(Author.AUTHOR.AUTHOR_ID, values);
    }

    /**
     * Fetch a unique record that has <code>author_id = value</code>
     */
    public org.elegant.model.jooq.tables.pojos.Author fetchOneByAuthorId(Integer value) {
        return fetchOne(Author.AUTHOR.AUTHOR_ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Author> fetchByName(String... values) {
        return fetch(Author.AUTHOR.NAME, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Author> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Author.AUTHOR.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Author> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Author.AUTHOR.UPDATE_TIME, values);
    }
}
