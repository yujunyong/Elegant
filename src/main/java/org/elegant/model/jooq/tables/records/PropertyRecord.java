/*
 * This file is generated by jOOQ.
 */
package org.elegant.model.jooq.tables.records;


import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.elegant.model.jooq.tables.Property;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PropertyRecord extends UpdatableRecordImpl<PropertyRecord> implements Record4<String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1326627819;

    /**
     * Setter for <code>PUBLIC.property.prop_name</code>. 属性名称
     */
    public PropertyRecord setPropName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.property.prop_name</code>. 属性名称
     */
    public String getPropName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>PUBLIC.property.prop_value</code>. 属性值
     */
    public PropertyRecord setPropValue(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.property.prop_value</code>. 属性值
     */
    public String getPropValue() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.property.create_time</code>. 创建时间
     */
    public PropertyRecord setCreateTime(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.property.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>PUBLIC.property.update_time</code>. 更新时间
     */
    public PropertyRecord setUpdateTime(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.property.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Property.PROPERTY.PROP_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Property.PROPERTY.PROP_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Property.PROPERTY.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Property.PROPERTY.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPropName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPropValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPropName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPropValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropertyRecord value1(String value) {
        setPropName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropertyRecord value2(String value) {
        setPropValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropertyRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropertyRecord value4(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PropertyRecord values(String value1, String value2, LocalDateTime value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PropertyRecord
     */
    public PropertyRecord() {
        super(Property.PROPERTY);
    }

    /**
     * Create a detached, initialised PropertyRecord
     */
    public PropertyRecord(String propName, String propValue, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Property.PROPERTY);

        set(0, propName);
        set(1, propValue);
        set(2, createTime);
        set(3, updateTime);
    }
}
