/*
 * This file is generated by jOOQ.
 */
package org.elegant.model.jooq.tables.daos;


import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.elegant.model.jooq.tables.Book;
import org.elegant.model.jooq.tables.records.BookRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookDao extends DAOImpl<BookRecord, org.elegant.model.jooq.tables.pojos.Book, Integer> {

    /**
     * Create a new BookDao without any configuration
     */
    public BookDao() {
        super(Book.BOOK, org.elegant.model.jooq.tables.pojos.Book.class);
    }

    /**
     * Create a new BookDao with an attached configuration
     */
    public BookDao(Configuration configuration) {
        super(Book.BOOK, org.elegant.model.jooq.tables.pojos.Book.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(org.elegant.model.jooq.tables.pojos.Book object) {
        return object.getBookId();
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByBookId(Integer... values) {
        return fetch(Book.BOOK.BOOK_ID, values);
    }

    /**
     * Fetch a unique record that has <code>book_id = value</code>
     */
    public org.elegant.model.jooq.tables.pojos.Book fetchOneByBookId(Integer value) {
        return fetchOne(Book.BOOK.BOOK_ID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByTitle(String... values) {
        return fetch(Book.BOOK.TITLE, values);
    }

    /**
     * Fetch records that have <code>dir_id IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByDirId(Integer... values) {
        return fetch(Book.BOOK.DIR_ID, values);
    }

    /**
     * Fetch records that have <code>language IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByLanguage(String... values) {
        return fetch(Book.BOOK.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>series IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchBySeries(String... values) {
        return fetch(Book.BOOK.SERIES, values);
    }

    /**
     * Fetch records that have <code>publisher IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByPublisher(String... values) {
        return fetch(Book.BOOK.PUBLISHER, values);
    }

    /**
     * Fetch records that have <code>publish_time IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByPublishTime(LocalDateTime... values) {
        return fetch(Book.BOOK.PUBLISH_TIME, values);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByRating(Short... values) {
        return fetch(Book.BOOK.RATING, values);
    }

    /**
     * Fetch records that have <code>isbn10 IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByIsbn10(Long... values) {
        return fetch(Book.BOOK.ISBN10, values);
    }

    /**
     * Fetch records that have <code>isbn13 IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByIsbn13(Long... values) {
        return fetch(Book.BOOK.ISBN13, values);
    }

    /**
     * Fetch records that have <code>page IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByPage(Short... values) {
        return fetch(Book.BOOK.PAGE, values);
    }

    /**
     * Fetch records that have <code>format IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByFormat(String... values) {
        return fetch(Book.BOOK.FORMAT, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Book.BOOK.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<org.elegant.model.jooq.tables.pojos.Book> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Book.BOOK.UPDATE_TIME, values);
    }
}
